
import Breadcrums from "@/components/common/breadcrums";
import MainLayout from "@/components/main-layout";
import { GetStaticPaths, GetStaticPropsContext } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { ParsedUrlQuery } from "querystring";
import { ReactElement } from "react";
import { fetchCategorySlug, fetchChildsCategories } from "src/lib/api/category";
import { ICategory } from "src/lib/types";
import useSWR from "swr";
import { NextPageWithLayout } from "../../_app";

type Props = {
  category: ICategory;
};

const ListCategoriesBySlug: NextPageWithLayout<Props> = (props: Props) => {
  const { query } = useRouter();
  const { slug } = query;
  const {
    data: category,
    error,
    isLoading,
  } = useSWR<ICategory | undefined>(slug, fetchCategorySlug);
  const breadcrumbs = [
    {
      title: "Sản phẩm",
      slug: "san-pham",
    },
    {
      slug: category?.slug || "",
      title: category?.name || "",
    },
    {
      title: category?.name || "",
      slug: "",
    },
  ];
  return (
    <>
      <Head>
        <title>{category?.name}</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <div className="flex flex-col items-start px-20 pt-8 pb-[60px]">
        <Breadcrums breadcrumbs={breadcrumbs} />
      </div>
    </>
  );
};
interface IParams extends ParsedUrlQuery {
  slug: string;
}
export const getStaticPaths: GetStaticPaths<{ id: string }> = async () => {
  const rootCategories = await fetchChildsCategories("0");

  // Get the paths we want to pre-render based on posts
  const paths = rootCategories.map((cate: ICategory) => ({
    params: { slug: cate.slug },
  }));

  return {
    paths: paths, //indicates that no page needs be created at build time
    fallback: "blocking", //indicates the type of fallback
  };
};

export async function getStaticProps(context: GetStaticPropsContext) {
  // `getStaticProps` is executed on the server side.
  const { slug } = context.params as IParams;

  const category = await fetchCategorySlug(slug);
  return {
    props: {
      category,
    },
  };
}

ListCategoriesBySlug.getLayout = function getLayout(page: ReactElement) {
  return (
    <>
      <MainLayout>{page}</MainLayout>
    </>
  );
};
export default ListCategoriesBySlug;
