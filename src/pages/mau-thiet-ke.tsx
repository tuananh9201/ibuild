import { ReactElement, useEffect, useState } from "react";
import { useRouter } from "next/router";
import { Pagination } from "antd";
import Head from "next/head";
import useSWR from "swr";
import Image from "next/image";

import {
  DesignCardLoading,
  Search,
  WrapperDesignCard,
  WrapperDropdown,
} from "@/components/designs";
import MainLayout from "@/components/main-layout";
import { getDesignBySearch } from "@/lib/api/design";
import { IDesignSearch } from "@/lib/types";
import { NextPageWithLayout } from "./_app";
import { scrollToTop } from "@/lib/hooks";
import noSearchResult from "@/images/no_search_result.png";

const DesignsPage: NextPageWithLayout = () => {
  // state
  const [params, setParams] = useState<IDesignSearch>({
    skip: 0,
    limit: 9,
    categoryId: "",
    keyword: "",
  });
  const [paging, setPaging] = useState({
    current: 1,
    total: 0,
  });
  const [openKeys, setOpenKeys] = useState<string[]>([]);
  const [selectedKeys, setSelectedKeys] = useState<string[]>(["all"]);
  const [title, setTitle] = useState("");

  // swr
  const { data: designs, isLoading } = useSWR(params, getDesignBySearch, {
    onSuccess: (data) => {
      setPaging((prev) => ({
        ...prev,
        total: data?.paging?.total || 0,
      }));
    },
  });

  // function
  const onChangePagination = (page: number) => {
    setPaging((prev) => ({
      ...prev,
      current: page,
    }));
    setParams((prev) => ({
      ...prev,
      skip: (page - 1) * 9,
    }));
    scrollToTop();
  };

  const handleChangeSearch = (search: string) => {
    setParams((prev) => ({
      ...prev,
      keyword: search,
    }));
    setOpenKeys([]);
    setSelectedKeys(["all"]);
  };

  useEffect(() => {
    setParams((prev) => ({
      ...prev,
      categoryId: !selectedKeys[0]
        ? ""
        : selectedKeys[0] === "all"
        ? ""
        : selectedKeys[0],
    }));
    setPaging((prev) => ({
      ...prev,
      current: 1,
      total: 0,
    }));
  }, [selectedKeys]);

  return (
    <>
      <Head>
        <title>Mẫu thiết kế</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <section className="flex flex-col justify-start px-4 pt-[60px] pb-4">
        <div className="w-full h-16 relative">
          <Search onChangeInput={handleChangeSearch} />
        </div>
        <div className="w-full flex flex-row mt-8 gap-12">
          <div className="w-[230px] custom-menu">
            <WrapperDropdown
              openKeys={openKeys}
              selectedKeys={selectedKeys}
              setOpenKeys={setOpenKeys}
              setSelectedKeys={setSelectedKeys}
              setTitle={setTitle}
            />
          </div>
          <div className="flex flex-col flex-base">
            <div className="my-4 text-text-color font-medium text-xl">
              {title}
            </div>
            {designs && (
              <WrapperDesignCard designs={designs.data} isLoading={isLoading} />
            )}
            {isLoading && <DesignCardLoading />}
            {!isLoading && designs && designs.data?.length === 0 && (
              <div className="text-center w-full">
                <Image
                  src={noSearchResult}
                  alt="no result"
                  className="mx-auto"
                />
                <h3 className="text-text-color font-medium text-xl mt-4 mb-2">
                  Không tìm thấy mẫu thiết kế
                </h3>
                <p>
                  "{params.keyword}" không trùng khớp với bất cứ sản phẩm nào
                </p>
              </div>
            )}

            <div className="mt-4">
              <div className="w-full text-center">
                <Pagination
                  onChange={onChangePagination}
                  current={paging.current}
                  pageSize={9}
                  total={paging.total}
                  hideOnSinglePage
                />
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
};
DesignsPage.getLayout = function getLayout(page: ReactElement) {
  return (
    <>
      <MainLayout>{page}</MainLayout>
    </>
  );
};
export default DesignsPage;
