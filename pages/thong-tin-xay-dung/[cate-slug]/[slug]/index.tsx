import { ReactElement } from "react";
import MainLayout from "@/components/main-layout";
import { NextPageWithLayout } from "../../../_app";
import Head from "next/head";
import data from "../../../../data/news1.json";
import { useRouter } from "next/router";
import { GetStaticPaths, GetStaticPropsContext } from "next";
import { fetchNewBySlug, fetchNewsForHome } from "lib/api/news";
import { INews } from "lib/types";
import { ParsedUrlQuery } from "querystring";
import useSWR from "swr";
import Breadcrums from "@/components/common/breadcrums";

interface IParams extends ParsedUrlQuery {
  slug: string;
}

const NewDetailPage: NextPageWithLayout = () => {
  const { query } = useRouter();
  const { data, error } = useSWR(query.slug, fetchNewBySlug, {
    fallbackData: undefined,
  });
  const news = data;
  const breadcrumbs = [
    "Thông tin xây dựng",
    news?.category.name || "",
    news?.title || "",
  ];
  return (
    <>
      <Head>
        <title>{news?.title}</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <div className="main-content">
        <Breadcrums breadcrumbs={breadcrumbs} />
        <h1>{news?.title}</h1>
      </div>
    </>
  );
};
export const getStaticPaths: GetStaticPaths<{ slug: string }> = async () => {
  const news = await fetchNewsForHome("/news");

  // Get the paths we want to pre-render based on posts
  const paths = news.map((news: INews) => ({
    params: { slug: news.slug },
  }));

  return {
    paths: paths, //indicates that no page needs be created at build time
    fallback: "blocking", //indicates the type of fallback
  };
};

export async function getStaticProps(context: GetStaticPropsContext) {
  // `getStaticProps` is executed on the server side.
  const { slug } = context.params as IParams;

  const news = await fetchNewBySlug(slug);
  return {
    props: {
      news,
    },
  };
}

NewDetailPage.getLayout = function getLayout(page: ReactElement) {
  return (
    <>
      <MainLayout>{page}</MainLayout>
    </>
  );
};
export default NewDetailPage;
